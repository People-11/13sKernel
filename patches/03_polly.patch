From 6a831320db90174685ba9687c957a183dc3ecc71 Mon Sep 17 00:00:00 2001
From: brokestar233 <3765589194@qq.com>
Date: Wed, 11 Jun 2025 23:36:59 +0800
Subject: [PATCH] ANDROID: gki_defconfig: Enable LLVM Polly optimizer for GKI
 builds

Add CONFIG_POLLY=y to gki_defconfig to enable the LLVM polyhedral loop
optimizer. This activates advanced loop transformations using the
polyhedral model including:

1. Loop tiling
2. Loop fusion/fission
3. OpenMP SIMD vectorization
4. Prevectorization
5. Array packing

Polly operates on the LLVM IR to perform high-level transformations
that traditional optimization passes cannot detect. Key benefits include:

- Improved data locality through tile size optimization
- Enhanced parallelization via automatic loop parallelization
- More efficient SIMD utilization
- Better cache utilization patterns

To enable full optimization potential, ensure builds use:
- O2 or higher optimization level (-O2)
- Loop unrolling enabled (-funroll-loops)
- Vectorization enabled (-fvectorize)

Polly provides significant performance gains for computational kernels,
particularly in domains like:
- Linear algebra operations
- Image processing pipelines
- Scientific computing workloads
- Data compression algorithms

Build time may increase moderately but yields improved runtime
performance for complex workloads.

Signed-off-by: brokestar233 <3765589194@qq.com>
---
 Makefile                         | 34 +++++++++++++++++++++++++++++++-
 arch/Kconfig                     |  8 ++++++++
 arch/arm64/configs/gki_defconfig |  2 ++
 init/Kconfig                     |  8 +++++++-
 4 files changed, 50 insertions(+), 2 deletions(-)

Index: common/Makefile
===================================================================
--- common/Makefile	2025-10-07 00:24:00.941724177 +1030
+++ common/Makefile	2025-10-07 00:24:00.941724177 +1030
@@ -849,6 +849,35 @@
 KBUILD_RUSTFLAGS += -Cdebug-assertions=$(if $(CONFIG_RUST_DEBUG_ASSERTIONS),y,n)
 KBUILD_RUSTFLAGS += -Coverflow-checks=$(if $(CONFIG_RUST_OVERFLOW_CHECKS),y,n)
 
+ifdef CONFIG_LLVM_POLLY
+KBUILD_CFLAGS	+= -fvectorize -funroll-loops -mllvm -polly \
+		   -mllvm -polly-run-inliner \
+		   -mllvm -polly-ast-use-context \
+		   -mllvm -polly-detect-keep-going \
+		   -mllvm -polly-invariant-load-hoisting \
+		   -mllvm -polly-vectorizer=stripmine
+
+ifeq ($(shell test $(CONFIG_CLANG_VERSION) -gt 130000; echo $$?),0)
+KBUILD_CFLAGS	+= -mllvm -polly-loopfusion-greedy=1 \
+		   -mllvm -polly-reschedule=1 \
+		   -mllvm -polly-postopts=1 \
+		   -mllvm -polly-num-threads=0 \
+		   -mllvm -polly-omp-backend=LLVM \
+		   -mllvm -polly-scheduling=dynamic \
+		   -mllvm -polly-scheduling-chunksize=1
+else
+KBUILD_CFLAGS	+= -mllvm -polly-opt-fusion=max
+endif
+
+# Polly may optimise loops with dead paths beyound what the linker
+# can understand. This may negate the effect of the linker's DCE
+# so we tell Polly to perfom proven DCE on the loops it optimises
+# in order to preserve the overall effect of the linker's DCE.
+ifdef CONFIG_LD_DEAD_CODE_DATA_ELIMINATION
+POLLY_FLAGS	+= -mllvm -polly-run-dce
+endif
+endif
+
 # Tell gcc to never replace conditional load with a non-conditional one
 ifdef CONFIG_CC_IS_GCC
 # gcc-10 renamed --param=allow-store-data-races=0 to
Index: common/arch/Kconfig
===================================================================
--- common/arch/Kconfig	2025-10-07 00:24:00.941724177 +1030
+++ common/arch/Kconfig	2025-10-07 00:24:00.941724177 +1030
@@ -835,6 +835,14 @@
 
 	  If unsure, say N.
 
+config LLVM_POLLY
+	bool "Enable LLVM's polyhedral loop optimizer (Polly)"
+	help
+	  This option enables LLVM's polyhedral loop optimizer known as Polly.
+	  Polly is able to optimize various loops throughout the kernel for
+	  maximum cache locality. This requires an LLVM toolchain explicitly
+	  compiled with Polly support.
+
 config HAVE_ARCH_WITHIN_STACK_FRAMES
 	bool
 	help
Index: common/arch/arm64/configs/gki_defconfig
===================================================================
--- common/arch/arm64/configs/gki_defconfig	2025-10-07 00:24:00.941724177 +1030
+++ common/arch/arm64/configs/gki_defconfig	2025-10-07 00:24:00.941724177 +1030
@@ -785,3 +785,5 @@
 CONFIG_KUNIT_EXAMPLE_TEST=m
 # CONFIG_KUNIT_DEFAULT_ENABLED is not set
 # CONFIG_RUNTIME_TESTING_MENU is not set
+CONFIG_LLVM_POLLY=y
+CONFIG_LD_DEAD_CODE_DATA_ELIMINATION=y
