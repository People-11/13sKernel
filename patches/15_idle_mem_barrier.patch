From de86ca3f04d35b9d085137de1e437f5ff022889f Mon Sep 17 00:00:00 2001
From: Zhongqiu Han <quic_zhonhan@quicinc.com>
Date: Wed, 9 Oct 2024 17:37:45 +0800
Subject: [PATCH] sched: idle: Optimize the generic idle loop by removing
 needless memory barrier

The memory barrier rmb() in generic idle loop do_idle() function is not
needed, it doesn't order any load instruction, just remove it as needless
rmb() can cause performance impact.

The rmb() was introduced by the tglx/history.git commit f2f1b44c75c4
("[PATCH] Remove RCU abuse in cpu_idle()") to order the loads between
cpu_idle_map and pm_idle. It pairs with wmb() in function cpu_idle_wait().

And then with the removal of cpu_idle_state in function cpu_idle() and
wmb() in function cpu_idle_wait() in commit 783e391b7b5b ("x86: Simplify
cpu_idle_wait"), rmb() no longer has a reason to exist.

After that, commit d16699123434 ("idle: Implement generic idle function")
implemented a generic idle function cpu_idle_loop() which resembles the
functionality found in arch/. And it retained the rmb() in generic idle
loop in file kernel/cpu/idle.c.

And at last, commit cf37b6b48428 ("sched/idle: Move cpu/idle.c to
sched/idle.c") moved cpu/idle.c to sched/idle.c. And commit c1de45ca831a
("sched/idle: Add support for tasks that inject idle") renamed function
cpu_idle_loop() to do_idle().

History Tree: https://git.kernel.org/pub/scm/linux/kernel/git/tglx/history.git
Signed-off-by: Zhongqiu Han <quic_zhonhan@quicinc.com>
Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Link: https://lkml.kernel.org/r/20241009093745.9504-1-quic_zhonhan@quicinc.com
---
 kernel/sched/idle.c | 2 --
 1 file changed, 2 deletions(-)

Index: common/kernel/sched/idle.c
===================================================================
--- common/kernel/sched/idle.c	2025-10-14 12:24:33.478036471 +1030
+++ common/kernel/sched/idle.c	2025-10-14 12:24:33.474095494 +1030
@@ -256,8 +256,6 @@
 	tick_nohz_idle_enter();
 
 	while (!need_resched()) {
-		rmb();
-
 		local_irq_disable();
 
 		if (cpu_is_offline(cpu)) {
